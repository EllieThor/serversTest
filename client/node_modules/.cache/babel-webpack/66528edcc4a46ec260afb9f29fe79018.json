{"ast":null,"code":"import _asyncToGenerator from \"C:/JOHN BRYCE/lessons/2021/07/02.07.21/serversTest/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./api.service\";\nexport class ServersServiceService {\n  constructor(apiService) {\n    this.apiService = apiService;\n    this._servers = [];\n  }\n\n  getAllServers(url) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      _this._servers = yield _this.apiService.createGetService(url);\n      console.log('Server: ', _this._servers);\n    })();\n  }\n\n  updateStatus(url, ob) {\n    return _asyncToGenerator(function* () {})();\n  }\n\n}\n\nServersServiceService.ɵfac = function ServersServiceService_Factory(t) {\n  return new (t || ServersServiceService)(i0.ɵɵinject(i1.ApiService));\n};\n\nServersServiceService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ServersServiceService,\n  factory: ServersServiceService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"sources":["C:\\JOHN BRYCE\\lessons\\2021\\07\\02.07.21\\serversTest\\client\\src\\app\\services\\servers-service.service.ts"],"names":[],"mappings":";;;AAOA,OAAM,MAAO,qBAAP,CAA4B;AAEhC,EAAA,WAAA,CAAmB,UAAnB,EAAyC;AAAtB,SAAA,UAAA,GAAA,UAAA;AADnB,SAAA,QAAA,GAA0B,EAA1B;AAC6C;;AAEvC,EAAA,aAAa,CAAC,GAAD,EAAY;AAAA;;AAAA;AAC7B,MAAA,KAAI,CAAC,QAAL,SAAuB,KAAI,CAAC,UAAL,CAAgB,gBAAhB,CACrB,GADqB,CAAvB;AAGA,MAAA,OAAO,CAAC,GAAR,CAAY,UAAZ,EAAwB,KAAI,CAAC,QAA7B;AAJ6B;AAK9B;;AACK,EAAA,YAAY,CAAC,GAAD,EAAc,EAAd,EAAqB;AAAA;AAAI;;AAVX;;;mBAArB,qB,EAAqB,EAAA,CAAA,QAAA,CAAA,EAAA,CAAA,UAAA,C;AAAA,C;;;SAArB,qB;AAAqB,EAAA,OAAA,EAArB,qBAAqB,CAAA,I;AAAA,EAAA,UAAA,EAFpB","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Server } from '../models/models';\nimport { ApiService } from './api.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ServersServiceService {\n  _servers: Array<Server> = [];\n  constructor(public apiService: ApiService) {}\n\n  async getAllServers(url: string) {\n    this._servers = (await this.apiService.createGetService(\n      url\n    )) as Array<Server>;\n    console.log('Server: ', this._servers);\n  }\n  async updateStatus(url: string, ob: any) {}\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}