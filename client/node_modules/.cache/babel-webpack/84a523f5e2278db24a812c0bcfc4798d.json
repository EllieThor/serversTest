{"ast":null,"code":"import _asyncToGenerator from \"C:/JOHN BRYCE/lessons/2021/07/02.07.21/serversTest/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"./settings.service\";\nimport * as i3 from \"./error.service\";\nexport class ApiService {\n  constructor(httpClient, settingsService, errorService) {\n    this.httpClient = httpClient;\n    this.settingsService = settingsService;\n    this.errorService = errorService;\n  }\n\n  createPostService(url, ob) {\n    var _this = this;\n\n    return new Promise( /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator(function* (resolve, reject) {\n        try {\n          yield _this.httpClient.post(_this.settingsService.baseUrl + url, ob).subscribe(data => {\n            resolve(data);\n          }, error => {\n            _this.errorService.errorHandlingHttp(error);\n\n            console.log('oops', error, error.error);\n          });\n        } catch (err) {\n          console.log('ERROR : ', err);\n          console.log(err);\n        }\n      });\n\n      return function (_x, _x2) {\n        return _ref.apply(this, arguments);\n      };\n    }());\n  }\n\n  createGetService(url, headParams) {\n    var _this2 = this;\n\n    return new Promise( /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator(function* (resolve, reject) {\n        try {\n          yield _this2.httpClient.get(_this2.settingsService.baseUrl + url).subscribe(data => {\n            resolve(data);\n          }, error => {\n            _this2.errorService.errorHandlingHttp(error);\n\n            console.log('oops', error, error.error);\n          });\n        } catch (err) {\n          console.log('ERROR : ', err);\n          console.log(err);\n        }\n      });\n\n      return function (_x3, _x4) {\n        return _ref2.apply(this, arguments);\n      };\n    }());\n  }\n\n}\n\nApiService.ɵfac = function ApiService_Factory(t) {\n  return new (t || ApiService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.SettingsService), i0.ɵɵinject(i3.ErrorsService));\n};\n\nApiService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ApiService,\n  factory: ApiService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"sources":["C:\\JOHN BRYCE\\lessons\\2021\\07\\02.07.21\\serversTest\\client\\src\\app\\services\\api.service.ts"],"names":[],"mappings":";;;;;AAQA,OAAM,MAAO,UAAP,CAAiB;AACrB,EAAA,WAAA,CACU,UADV,EAES,eAFT,EAGS,YAHT,EAGoC;AAF1B,SAAA,UAAA,GAAA,UAAA;AACD,SAAA,eAAA,GAAA,eAAA;AACA,SAAA,YAAA,GAAA,YAAA;AACL;;AAEJ,EAAA,iBAAiB,CAAC,GAAD,EAAc,EAAd,EAAqB;AAAA;;AACpC,WAAO,IAAI,OAAJ;AAAA,mCAAY,WAAO,OAAP,EAAgB,MAAhB,EAA0B;AAC3C,YAAI;AACF,gBAAM,KAAI,CAAC,UAAL,CACH,IADG,CACE,KAAI,CAAC,eAAL,CAAqB,OAArB,GAA+B,GADjC,EACsC,EADtC,EAEH,SAFG,CAGD,IAAD,IAAS;AACP,YAAA,OAAO,CAAC,IAAD,CAAP;AACD,WALC,EAMD,KAAD,IAAU;AACR,YAAA,KAAI,CAAC,YAAL,CAAkB,iBAAlB,CAAoC,KAApC;;AACA,YAAA,OAAO,CAAC,GAAR,CAAY,MAAZ,EAAoB,KAApB,EAA2B,KAAK,CAAC,KAAjC;AACD,WATC,CAAN;AAWD,SAZD,CAYE,OAAO,GAAP,EAAY;AACZ,UAAA,OAAO,CAAC,GAAR,CAAY,UAAZ,EAAwB,GAAxB;AACA,UAAA,OAAO,CAAC,GAAR,CAAY,GAAZ;AACD;AACF,OAjBM;;AAAA;AAAA;AAAA;AAAA,QAAP;AAkBD;;AAED,EAAA,gBAAgB,CAAC,GAAD,EAAc,UAAd,EAA8B;AAAA;;AAC5C,WAAO,IAAI,OAAJ;AAAA,oCAAY,WAAO,OAAP,EAAgB,MAAhB,EAA0B;AAC3C,YAAI;AACF,gBAAM,MAAI,CAAC,UAAL,CAAgB,GAAhB,CAAoB,MAAI,CAAC,eAAL,CAAqB,OAArB,GAA+B,GAAnD,EAAwD,SAAxD,CACH,IAAD,IAAS;AACP,YAAA,OAAO,CAAC,IAAD,CAAP;AACD,WAHG,EAIH,KAAD,IAAU;AACR,YAAA,MAAI,CAAC,YAAL,CAAkB,iBAAlB,CAAoC,KAApC;;AACA,YAAA,OAAO,CAAC,GAAR,CAAY,MAAZ,EAAoB,KAApB,EAA2B,KAAK,CAAC,KAAjC;AACD,WAPG,CAAN;AASD,SAVD,CAUE,OAAO,GAAP,EAAY;AACZ,UAAA,OAAO,CAAC,GAAR,CAAY,UAAZ,EAAwB,GAAxB;AACA,UAAA,OAAO,CAAC,GAAR,CAAY,GAAZ;AACD;AACF,OAfM;;AAAA;AAAA;AAAA;AAAA,QAAP;AAgBD;;AA7CoB;;;mBAAV,U,EAAU,EAAA,CAAA,QAAA,CAAA,EAAA,CAAA,UAAA,C,EAAA,EAAA,CAAA,QAAA,CAAA,EAAA,CAAA,eAAA,C,EAAA,EAAA,CAAA,QAAA,CAAA,EAAA,CAAA,aAAA,C;AAAA,C;;;SAAV,U;AAAU,EAAA,OAAA,EAAV,UAAU,CAAA,I;AAAA,EAAA,UAAA,EAFT","sourcesContent":["import { HttpClient, HttpClientModule } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { ErrorsService } from './error.service';\nimport { SettingsService } from './settings.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ApiService {\n  constructor(\n    private httpClient: HttpClient,\n    public settingsService: SettingsService,\n    public errorService: ErrorsService\n  ) {}\n\n  createPostService(url: string, ob: any) {\n    return new Promise(async (resolve, reject) => {\n      try {\n        await this.httpClient\n          .post(this.settingsService.baseUrl + url, ob)\n          .subscribe(\n            (data) => {\n              resolve(data);\n            },\n            (error) => {\n              this.errorService.errorHandlingHttp(error);\n              console.log('oops', error, error.error);\n            }\n          );\n      } catch (err) {\n        console.log('ERROR : ', err);\n        console.log(err);\n      }\n    });\n  }\n\n  createGetService(url: string, headParams?: any) {\n    return new Promise(async (resolve, reject) => {\n      try {\n        await this.httpClient.get(this.settingsService.baseUrl + url).subscribe(\n          (data) => {\n            resolve(data);\n          },\n          (error) => {\n            this.errorService.errorHandlingHttp(error);\n            console.log('oops', error, error.error);\n          }\n        );\n      } catch (err) {\n        console.log('ERROR : ', err);\n        console.log(err);\n      }\n    });\n  }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}